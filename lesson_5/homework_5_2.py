print("================================================")
print("Срезы списков")
print("================================================")
print("1. Создание и копирование списков")
cities1 = ['Москва','Питер','Казань', 'Сочи']
print(cities1)
cities2 = cities1 [:]
print(id(cities1) == id(cities2))
print("================================================")
print("2. Извлечение элементов с помощью срезов")
print(cities1[1], cities1[2])
print(cities1[2:])
print(cities1[:3])
print(cities1[:])
print(cities1[-2:])
print("================================================")
print("3. Использование шагов в срезах")
print(cities1)
print(cities1[1::2])
print(cities1[::-1])
print(cities1[2::-2])
print("================================================")
print("4. Изменение элементов списка через срезы")
print(cities1)
cities1[1:3] = ["Сочи", "Нижний Новгород"]
print(cities1)
cities1[1::2] = ["Город"] * len(cities1[1::2])
print(cities1)
cities1[1:3] = "Волгоград", "Омск"
print(cities1)
print("================================================")
print("5. Операции с объединением списков")
a = [1, 2, 3]
b = [4, 5, 6]
print(a+b)

c = ["Python", "rocks"]
print(c * 3)
print("================================================")
print("6. Сравнение списков")
print( [1, 2, 3] == [1, 2, 3] )
print([10, 5, 3] > [5, 10, 3])
print([1, 2, 3] == [1, 2, "abc"])  # можно выполнять только ==, !=
print("================================================")
print("7. Дополнительное задание")
chars = list("Python")
print(chars)
print(max(chars))
print(min(chars))
# print(sum(chars))  unsupported operand type(s) for +: 'int' and 'str' сложение выполняется с 0, а  0 это число

print("================================================")